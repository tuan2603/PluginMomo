package vn.kpis.momo;import android.content.Intent;import android.util.Log;import android.widget.Toast;import com.getcapacitor.JSObject;import com.getcapacitor.NativePlugin;import com.getcapacitor.Plugin;import com.getcapacitor.PluginCall;import com.getcapacitor.PluginMethod;import com.getcapacitor.SecondActivity;import org.json.JSONException;import org.json.JSONObject;import java.util.HashMap;import java.util.Map;import vn.momo.momo_partner.AppMoMoLib;import vn.momo.momo_partner.MoMoParameterNamePayment;import static android.content.ContentValues.TAG;@NativePlugin()public class MomoPlugin extends Plugin {    static final int REQUEST_IMAGE_PICK = 12345;    private String amount = "10000";    private String total_fee = "0";    private int environment = 0;// developer default    private String merchantName = "MoMo";    private String merchantCode = "SCB01";    private String description = "Thanh toán dịch vụ ABC";    private String merchantNameLabel = "Dịch vụ";    private String orderId  = "000003232";    private String orderLabel = "Mã đơn hàng";    @PluginMethod()    public void echo(PluginCall call) {        String value = call.getString("value");        saveCall(call);        // Unique code        Intent intent=new Intent(getContext(), SecondActivity.class);        startActivityForResult(call, intent, REQUEST_IMAGE_PICK);        JSObject ret = new JSObject();        ret.put("value", value);        call.success(ret);    }    @PluginMethod()    public void payment(PluginCall call) {        AppMoMoLib.getInstance().setEnvironment(AppMoMoLib.ENVIRONMENT.DEVELOPMENT);        AppMoMoLib.getInstance().setAction(AppMoMoLib.ACTION.PAYMENT);        AppMoMoLib.getInstance().setActionType(AppMoMoLib.ACTION_TYPE.GET_TOKEN);        // Example extra data        JSONObject objExtraData = new JSONObject();        try {            objExtraData.put("site_code", "008");            objExtraData.put("site_name", "CGV Cresent Mall");            objExtraData.put("screen_code", 0);            objExtraData.put("screen_name", "Special");            objExtraData.put("movie_name", "Kẻ Trộm Mặt Trăng 3");            objExtraData.put("movie_format", "2D");        } catch (JSONException e) {            e.printStackTrace();            call.reject(" loi ", e );            return;        }        if ( call != null ) {            try {                this.amount  = call.getString("amount");                this.merchantName  = call.getString("merchantName");                this.merchantCode  = call.getString("merchantCode");                this.orderId  = call.getString("orderId");                this.orderLabel  = call.getString("orderLabel");                this.merchantNameLabel  = call.getString("merchantNameLabel");                this.total_fee  = call.getString("total_fee");                this.description  = call.getString("description");                objExtraData  =  new JSONObject(call.getString("objExtraData"));            }catch( Exception ex) {                call.reject(" loi ", ex );            }        }        Map<String, Object> eventValue = new HashMap<>();        // client Required        eventValue.put("merchantname", this.merchantName); // Tên đối tác. được đăng ký tại https://business.momo.vn. VD:        // Google, Apple, Tiki , CGV Cinemas        eventValue.put("merchantcode", this.merchantCode); // Mã đối tác, được cung cấp bởi MoMo tại https://business.momo.vn        eventValue.put("amount", this.amount); // Kiểu integer        eventValue.put("orderId", this.orderId); // uniqueue id cho Bill order, giá trị duy nhất cho mỗi đơn hàng        eventValue.put("orderLabel", this.orderLabel); // gán nhãn        // client Optional - bill info        eventValue.put("merchantnamelabel", this.merchantNameLabel);// gán nhãn        eventValue.put("fee", this.total_fee); // Kiểu integer        eventValue.put("description", this.description); // mô tả đơn hàng - short description        // client extra data        eventValue.put("requestId", this.merchantCode + "merchant_billId_" + System.currentTimeMillis());        eventValue.put("partnerCode", this.merchantCode );        eventValue.put("extraData", objExtraData.toString());        eventValue.put("requestType", "payment");        eventValue.put("language", "vi");        eventValue.put("extra", "");        saveCall(call);        AppMoMoLib.getInstance().requestMoMoCallBack( getActivity(), eventValue);//        JSObject ret = new JSObject();//        ret.put("value", "chay roi ne");//        call.success(ret);    }    @Override    protected void handleOnActivityResult(int requestCode, int resultCode, Intent data) {        super.handleOnActivityResult(requestCode, resultCode, data);        Log.d(TAG, "handleOnActivityResult: ");        // Get the previously saved call        PluginCall savedCall = getSavedCall();        if (savedCall == null) {            savedCall.reject(" loi ");            return;        }        if (requestCode == AppMoMoLib.getInstance().REQUEST_CODE_MOMO && resultCode == -1) {            if (data != null) {                if (data.getIntExtra("status", -1) == 0) {                    // TOKEN IS AVAILABLE                    // tvMessage.setText("message: " + "Get token " + data.getStringExtra("message"));                    Toast.makeText(getActivity(), "message: " + "Get token " + data.getStringExtra("message"), Toast.LENGTH_LONG).show();                    String token = data.getStringExtra("data"); // Token response                    String phoneNumber = data.getStringExtra("phonenumber");                    String env = data.getStringExtra("env");                    if (env == null) {                        env = "app";                    }                    if (token != null && !token.equals("")) {                        // TODO: send phoneNumber & token to your server side to process payment with                        // MoMo server                        // IF Momo topup success, continue to process your order                        JSObject ret = new JSObject();                        ret.put("token", token);                        savedCall.resolve();                        return;                    } else {                        // tvMessage.setText("message: " + this.getString(R.string.not_receive_info));                        Log.d("requestpayment", "1");                        savedCall.reject(" loi ");                        return;                    }                }                else {                    savedCall.reject(" loi ");                    return;                }            } else {                savedCall.reject(" loi ");                return;            }        } else {            savedCall.reject(" loi ");            return;        }    }}